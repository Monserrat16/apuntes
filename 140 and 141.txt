video 140 and 141

1.-Nos fuimos a categories_controller_test y a;adiremos mero abajo un test
test "should redirect create when admin not logger in" do  
      assert_no_difference 'Categories.count' do 
        post :create, category: {name: "sport"}

      end
       assert_redirected_to categories_path
    end

2.- eb categories_controller.rb
before_action :require_admin, except: [:index, :show]
y en la parte de abajo:
def require_admin
    if !logged_in? || (logged_in? and !current_user.admin?)
      flash[:danger] = "Only admin can perfom that action"
      redirect_to categories_path
    end
3.-Ahora nos iremos a categories_controle_test

y pondremos esto debajo de la primera lina de def setup
  @user = User.create(username: "john", email: "john@example.com", password: "password", admin: true)


4.-debajo de should get new
pondremos session[:user_id] = @user.id

----------------------------------------------------------------------
Section 7, Lecture 141
Update categories_controller_test.rb file to create admin user and then simulate log in:

require 'test_helper'

class CategoriesControllerTest < ActionController::TestCase

def setup

@category = Category.create(name: "sports")

@user = User.create(username: "john", email: "john@example.com", password: "password", admin: true)

end

test "should get categories index" do

get :index

assert_response :success

end

test "should get new" do

session[:user_id] = @user.id

get :new

assert_response :success

end

test "should get show" do

get(:show, {'id' => @category.id})

assert_response :success

end

test "should redirect create when admin not logged in" do

assert_no_difference 'Category.count' do

post :create, category: { name: "sports" }

end

assert_redirected_to categories_path

end

end

Add code to require logged in admin users to categories_controller.rb file:

class CategoriesController < ApplicationController

before_action :require_admin, except: [:index, :show]

def index

@categories = Category.paginate(page: params[:page], per_page: 5)

end

def new

@category = Category.new

end

def create

@category = Category.new(category_params)

if @category.save

flash[:success] = "Category was created successfully"

redirect_to categories_path

else

render 'new'

end

end

def show

end

private

def category_params

params.require(:category).permit(:name)

end

def require_admin

if !logged_in? || (logged_in? and !current_user.admin?)

flash[:danger] = "Only admins can perform that action"

redirect_to categories_path

end

end

end


